generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  itemId    Int
  quantity  Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? 

  // リレーション
  cart Cart @relation(fields: [cartId], references: [id])
  item Item @relation(fields: [itemId], references: [id])
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  

  //リレーション
  items CartItem[]
  user User @relation(fields: [userId], references: [id])
}

model CheckoutTemp {
  id           Int       @id @default(autoincrement())
  userId       Int
  lastName     String
  firstName    String
  email        String
  postCode     String
  prefecture   String
  city         String
  street       String
  building     String?
  phoneNumber  String
  paymentMethod String
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? 

  // リレーション
  user User @relation(fields: [userId], references: [id])
}

model Country {
  id       Int      @id
  name     String
  isoCode  String
  isActive Boolean

  // Item とのリレーション（1対多）
  items Item[]
}

model Item {
  id            Int       @id
  countriesId   Int?      
  name          String?   @unique
  nameEnglish   String?   @unique
  price         Int?
  itemDetails   String?   @db.VarChar(510)
  stock         Int
  image         String? 
  volume        Int?
  abv           Float?    
  salesCount    Int?
  isSoldOut     Boolean   @default(false)
  createdAt     DateTime? @default(now())
  updatedAt     DateTime?

  // リレーション
  country       Country?  @relation(fields: [countriesId], references: [id])
  cartItems     CartItem[]
  orderItems OrderItem[] 
}

model OrderItem {
  id        Int       @id @default(autoincrement())
  orderId   Int
  itemId    Int
  quantity  Int
  price     Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? 

  // リレーション
  order Order @relation(fields: [orderId], references: [id])
  item  Item  @relation(fields: [itemId], references: [id])
}

model Order {
  id            Int       @id @default(autoincrement())
  userId        Int
  lastName      String
  firstName     String
  email         String
  postCode      String
  prefecture    String
  city          String
  street        String
  building      String?
  phoneNumber   String
  paymentMethod String
  totalPrice    Int
  shippingFee   Int
  paymentTotal  Int
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? 

  // リレーション
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  lastName       String
  firstName      String
  lastNameKana   String?
  firstNameKana  String?
  postCode       String
  prefecture     String
  city           String
  street         String
  building       String?
  phoneNumber    String
  birthday       DateTime?
  isDeleted      Boolean   @default(false)
  role           String    @default("user")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  lastLoginAt    DateTime?

  // リレーション
  carts           Cart[]
  orders          Order[]
  checkoutTemps CheckoutTemp[] 
}